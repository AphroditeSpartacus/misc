[
	{ "keys": ["super+q"], "command": "noop" },

	{ "keys": ["ctrl+j"], "command": "run_macro_file", "args": {"file": "Packages/Default/Add Line.sublime-macro"} },
	{ "keys": ["super+ctrl+j"], "command": "run_macro_file", "args": {"file": "Packages/Default/Add Line.sublime-macro"} },
	{ "keys": ["super+shift+ctrl+j"], "command": "run_macro_file", "args": {"file": "Packages/Default/Add Line Before.sublime-macro"} },

	{ "keys": ["ctrl+super+j"], "command": "insert", "args": {"characters": "\n"} },
	{ "keys": ["ctrl+j"], "command": "commit_completion", "context":
		[
			{ "key": "auto_complete_visible" },
			{ "key": "setting.auto_complete_commit_on_ctrl+i", "operand": false }
		]
	},
	{ "keys": ["ctrl+j"], "command": "run_macro_file", "args": {"file": "Packages/Default/Add Line in Braces.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_indent", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
		]
	},
	{ "keys": ["ctrl+shift+j"], "command": "run_macro_file", "args": {"file": "Packages/Default/Add Line in Braces.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_indent", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
		]
	},

	// Find panel key bindings
	{ "keys": ["ctrl+j"], "command": "find_next", "context":
		[{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["shift+ctrl+j"], "command": "find_prev", "context":
		[{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["alt+ctrl+j"], "command": "find_all", "args": {"close_panel": true},
		 "context": [{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}]
	},

	// Replace panel key bindings
	{ "keys": ["ctrl+j"], "command": "find_next", "context":
		[{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["shift+ctrl+j"], "command": "find_prev", "context":
		[{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["alt+ctrl+j"], "command": "find_all", "args": {"close_panel": true},
		"context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["shift+alt+ctrl+j"], "command": "replace_all", "args": {"close_panel": true},
		 "context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}]
	},

	// Incremental find panel key bindings
	{ "keys": ["ctrl+j"], "command": "hide_panel", "context":
		[{"key": "panel", "operand": "incremental_find"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["shift+ctrl+j"], "command": "find_prev", "context":
		[{"key": "panel", "operand": "incremental_find"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["alt+ctrl+j"], "command": "find_all", "args": {"close_panel": true},
		"context": [{"key": "panel", "operand": "incremental_find"}, {"key": "panel_has_focus"}]
	},

	{ "keys": ["super+s"], "command": "slurp_find_string" },

	{ "keys": ["ctrl+super+s"], "command": "find_under_expand" },
	{ "keys": ["ctrl+super+shift+s"], "command": "find_under_expand_skip" },
	{ "keys": ["ctrl+super+9"], "command": "expand_selection", "args": {"to": "scope"} },
	{ "keys": ["ctrl+super+0"], "command": "expand_selection", "args": {"to": "brackets"} },
	{ "keys": ["ctrl+super+b"], "command": "move_to", "args": {"to": "brackets"} },

	{ "keys": ["ctrl+i"], "command": "insert_best_completion", "args": {"default": "\t", "exact": true} },
	{ "keys": ["ctrl+i"], "command": "insert_best_completion", "args": {"default": "\t", "exact": false},
		"context":
		[
			{ "key": "setting.tab_completion", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["ctrl+i"], "command": "replace_completion_with_next_completion", "context":
		[
			{ "key": "last_command", "operator": "equal", "operand": "insert_best_completion" },
			{ "key": "setting.tab_completion", "operator": "equal", "operand": true }
		]
	},

	{ "keys": ["ctrl+i"], "command": "reindent", "context":
		[
			{ "key": "setting.auto_indent", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_match", "operand": "^$", "match_all": true },
			{ "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true }
		]
	},
	{ "keys": ["ctrl+i"], "command": "indent", "context":
		[
			{ "key": "text", "operator": "regex_contains", "operand": "\n" }
		]
	},
	{ "keys": ["ctrl+i"], "command": "next_field", "context":
		[
			{ "key": "has_next_field", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["ctrl+i"], "command": "commit_completion", "context":
		[
			{ "key": "auto_complete_visible" },
			{ "key": "setting.auto_complete_commit_on_ctrl+i" }
		]
	},

	{ "keys": ["super+ctrl+i"], "command": "insert", "args": {"characters": "\t"} },
	{ "keys": ["super+ctrl+i"], "command": "unindent", "context":
		[
			{ "key": "setting.shift_tab_unindent", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["super+ctrl+i"], "command": "unindent", "context":
		[
			{ "key": "preceding_text", "operator": "regex_match", "operand": "^[\t ]*" }
		]
	},
	{ "keys": ["super+ctrl+i"], "command": "unindent", "context":
		[
			{ "key": "text", "operator": "regex_contains", "operand": "\n" }
		]
	},
	{ "keys": ["super+ctrl+i"], "command": "prev_field", "context":
		[
			{ "key": "has_prev_field", "operator": "equal", "operand": true }
		]
	},

	{ "keys": ["super+i"], "command": "reindent" },

	{ "keys": ["super+/"], "command": "insert_best_completion", "args": {"exact": false},
		"context":
		[
			{ "key": "setting.tab_completion", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["super+/"], "command": "replace_completion_with_next_completion", "context":
		[
			{ "key": "last_command", "operator": "equal", "operand": "insert_best_completion" },
			{ "key": "setting.tab_completion", "operator": "equal", "operand": true }
		]
	},

	{ "keys": ["ctrl+y"], "command": "paste_and_indent" },
	{ "keys": ["ctrl+super+y"], "command": "paste" },

	{ "keys": ["super+v"], "command": "move", "args": {"by": "pages", "forward": false} },

	{ "keys": ["super+b"], "command": "move", "args": {"by": "words", "forward": false} },
	{ "keys": ["super+f"], "command": "move", "args": {"by": "word_ends", "forward": true} },

	{ "keys": ["super+shift+,"], "command": "move_to", "args": {"to": "bof", "extend": false}},
	{ "keys": ["super+shift+."], "command": "move_to", "args": {"to": "eof", "extend": false}},

	{ "keys": ["super+y"], "command": "sbp_yank_choice" },

	{ "keys": ["super+w"], "command": "sbp_kill_ring_save" },

	{ "keys": ["super+d"], "command": "delete_word", "args": { "forward": true, "sub_words": true } },
	{ "keys": ["ctrl+super+h"], "command": "delete_word", "args": { "forward": false, "sub_words": true } },

	{ "keys": ["super+;"], "command": "toggle_comment", "args": { "block": false } },
	{ "keys": ["super+alt+;"], "command": "toggle_comment", "args": { "block": true } },

	{ "keys": ["ctrl+super+/"], "command": "redo"},

	{ "keys": ["super+g"], "command": "show_overlay", "args": {"overlay": "goto", "show_files": true, "text" : ":"}},
	{ "keys": ["ctrl+super+g"], "command": "show_overlay", "args": {"overlay":"goto", "show_files" : false, "text": "@"}},

	{ "keys": ["ctrl+o"], "command": "run_macro_file", "args": {"file": "Packages/Default/Add Line Before.sublime-macro"} },

	{ "keys": ["ctrl+h"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\"$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\"", "match_all": true }
		]
	},
	{ "keys": ["ctrl+h"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "'$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true }
		]
	},
	{ "keys": ["ctrl+h"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\($", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\)", "match_all": true }
		]
	},
	{ "keys": ["ctrl+h"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\[$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\]", "match_all": true }
		]
	},
	{ "keys": ["ctrl+h"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
		]
	},

	{ "keys": ["ctrl+n"], "command": "move", "args": {"by": "lines", "forward": true, "extend": true}, "context":
		[
			{ "key": "sbp_emacs_has_mark", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["ctrl+p"], "command": "move", "args": {"by": "lines", "forward": false, "extend": true}, "context":
		[
			{ "key": "sbp_emacs_has_mark", "operator": "equal", "operand": true }
		]
	},

	{ "keys": ["ctrl+'"], "command": "next_view_in_stack" },
	{ "keys": ["ctrl+super+'"], "command": "prev_view_in_stack" },

	{ "keys": ["ctrl+super+k"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Line.sublime-macro"} },

	{ "keys": ["ctrl+g"], "command": "clear_fields", "context":
		[
			{ "key": "has_next_field", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["ctrl+g"], "command": "clear_fields", "context":
		[
			{ "key": "has_prev_field", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["ctrl+g"], "command": "hide_panel", "args": {"cancel": true},
		"context":
		[
			{ "key": "panel_visible", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["ctrl+g"], "command": "hide_overlay", "context":
		[
			{ "key": "overlay_visible", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["ctrl+g"], "command": "hide_auto_complete", "context":
		[
			{ "key": "auto_complete_visible", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["ctrl+g"], "command": "single_selection", "context":
		[
			{ "key": "num_selections", "operator": "not_equal", "operand": 1 }
		]
	},
	{ "keys": ["ctrl+g"], "command": "clear_selection", "context":
		[
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": false }
		]
	},
	{ "keys": ["ctrl+g"], "command": "sbp_cancel_mark", "context":
		[
	    	{ "key": "sbp_emacs_has_mark", "operator": "equal", "operand": true }
		]
	},

	{ "keys": ["ctrl+super+1"], "command": "focus_group", "args": { "group": 0 } },
	{ "keys": ["ctrl+super+2"], "command": "focus_group", "args": { "group": 1 } },
	{ "keys": ["ctrl+super+3"], "command": "focus_group", "args": { "group": 2 } },
	{ "keys": ["ctrl+super+4"], "command": "focus_group", "args": { "group": 3 } },

	{ "keys": ["super+ctrl+;"], "command": "auto_complete" },
	{ "keys": ["super+ctrl+;"], "command": "replace_completion_with_auto_complete", "context":
		[
			{ "key": "last_command", "operator": "equal", "operand": "insert_best_completion" },
			{ "key": "auto_complete_visible", "operator": "equal", "operand": false },
			{ "key": "setting.tab_completion", "operator": "equal", "operand": true }
		]
	},

	// bookmark
	{ "keys": ["ctrl+x", "b"], "command": "noop" },
	{ "keys": ["ctrl+x", "b", "n"], "command": "next_bookmark" },
	{ "keys": ["ctrl+x", "b", "p"], "command": "prev_bookmark" },
	{ "keys": ["ctrl+x", "b", "t"], "command": "toggle_bookmark" },
	{ "keys": ["ctrl+x", "b", "c"], "command": "clear_bookmarks" },
	{ "keys": ["ctrl+x", "b", "a"], "command": "select_all_bookmarks" },

	// Auto-pair single quotes
	{ "keys": ["'"], "command": "insert_snippet", "args": {"contents": "'$0'"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
			// { "key": "preceding_text", "operator": "not_regex_contains", "operand": "['a-zA-Z0-9_]$", "match_all": true },
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "[']$", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single", "match_all": true }
		]
	},
	{ "keys": ["'"], "command": "insert_snippet", "args": {"contents": "'${0:$SELECTION}'"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
		]
	},
	{ "keys": ["'"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true }
		]
	},

	///////////////////// SublimeCodeIntel keymap start ///////////////////////
	{ "keys": ["ctrl+;"], "command": "code_intel_auto_complete" },
	{ "keys": ["ctrl+x","ctrl+d"], "command": "goto_python_definition" },
	{ "keys": ["super+alt+ctrl+left"], "command": "back_to_python_definition"},
	///////////////////// SublimeCodeIntel keymap end ///////////////////////

	///////////////////// REPL keymap start ///////////////////////
	{ "keys": ["ctrl+p"], "command": "repl_view_previous",
	"context":
		[
			{ "key": "setting.repl", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["ctrl+n"], "command": "repl_view_next",
	"context":
		[
			{ "key": "setting.repl", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["ctrl+j"], "command": "repl_enter", "args": {},
	"context":
		[
			{ "key": "setting.repl", "operator": "equal", "operand": true },
			{ "key": "auto_complete_visible", "operator": "equal", "operand": false }
		]
	},
	{ "keys": ["ctrl+g"], "command": "repl_escape", "args": {},
	"context":
		[
			{ "key": "setting.repl", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["ctrl+u"], "command": "repl_escape", "args": {},
	"context":
		[
			{ "key": "setting.repl", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["ctrl+h"], "command": "repl_backspace", "args": {},
	"context":
		[
			{ "key": "setting.repl", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["ctrl+b"], "command": "repl_left", "args": {},
	"context":
		[
			{ "key": "setting.repl", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["ctrl+a"], "command": "repl_home", "args": {},
	"context":
		[
			{ "key": "setting.repl", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["shift+ctrl+b"], "command": "repl_shift_left", "args": {},
	"context":
		[
			{ "key": "setting.repl", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["shift+ctrl+a"], "command": "repl_shift_home", "args": {},
	"context":
		[
			{ "key": "setting.repl", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["ctrl+l"], "command": "repl_clear",
	"context":
		[
			{ "key": "setting.repl", "operator": "equal", "operand": true }
		]
	},

	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	{"keys": ["ctrl+super+r"],
	 "command": "repl_open",
	 "caption": "Python - RUN current file",
	 "id": "repl_python_run",
	 "mnemonic": "d",
	 "args": {
	    "type": "subprocess",
	    "encoding": "utf8",
	    "cmd": ["python", "-u", "$file_basename"],
	    "cwd": "$file_path",
	    "syntax": "Packages/Python/Python.tmLanguage",
	    "external_id": "python"
	    }
	},
	// {"keys": ["ctrl+super+r"],
	//  "command": "repl_open",
	//  "caption": "Python - PDB current file",
	//  "id": "repl_python_pdb",
	//  "mnemonic": "d",
	//  "args": {
	//     "type": "subprocess",
	//     "encoding": "utf8",
	//     "cmd": ["python", "-i", "-u", "-m", "pdb", "$file_basename"],
	//     "cwd": "$file_path",
	//     "syntax": "Packages/Python/Python.tmLanguage",
	//     "external_id": "python"
	//     }
	// },
	// {"keys": ["ctrl+x", "p"],
	//  "command": "repl_open",
	//  "caption": "Python",
	//  "id": "repl_python",
	//  "mnemonic": "p",
	//  "args": {
	//     "type": "subprocess",
	//     "encoding": "utf8",
	//     "cmd": ["python", "-i", "-u"],
	//     "cwd": "$file_path",
	//     "syntax": "Packages/Python/Python.tmLanguage",
	//     "external_id": "python"
	//     }
	// },
	///////////////////// REPL keymap end ///////////////////////

	{ "keys": ["ctrl+x", "super+r"], "command": "show_panel", "args": {"panel": "replace"} },
	{ "keys": ["super+r"], "command": "build" },

	///////////////////// SFTP keymap start ///////////////////////
	{ "keys": ["super+ctrl+n","super+ctrl+s"], "command": "sftp_create_server" },
	{ "keys": ["super+ctrl+n","super+ctrl+b"], "command": "sftp_browse_server" },
	{ "keys": ["super+ctrl+n","super+ctrl+n"], "command": "sftp_last_server" },
	{ "keys": ["super+ctrl+n","super+ctrl+e"], "command": "sftp_edit_server" },
	{ "keys": ["super+ctrl+n","super+ctrl+d"], "command": "sftp_delete_server" },

	{ "keys": ["super+ctrl+u","super+ctrl+f"], "command": "sftp_upload_file" },
	{ "keys": ["super+ctrl+u","super+ctrl+r"], "command": "sftp_upload_folder" },
	{ "keys": ["super+ctrl+u","super+ctrl+y"], "command": "sftp_sync_up" },
	{ "keys": ["super+ctrl+u","super+ctrl+n"], "command": "sftp_upload_open_files" },
	{ "keys": ["super+ctrl+u","super+ctrl+m"], "command": "sftp_monitor_file" },

	{ "keys": ["super+ctrl+u","super+ctrl+o"], "command": "sftp_download_file" },
	{ "keys": ["super+ctrl+u","super+ctrl+e"], "command": "sftp_download_folder" },
	{ "keys": ["super+ctrl+u","super+ctrl+d"], "command": "sftp_sync_down" },
	{ "keys": ["super+ctrl+u","super+ctrl+i"], "command": "sftp_diff_remote_file" },

	{ "keys": ["super+ctrl+u","super+ctrl+b"], "command": "sftp_sync_both" },
	{ "keys": ["super+ctrl+u","super+ctrl+c"], "command": "sftp_vcs_changed_files" },

	{ "keys": ["super+ctrl+u","super+ctrl+w"], "command": "sftp_browse" },

	{ "keys": ["super+ctrl+u","super+ctrl+s"], "command": "sftp_show_panel" },
	{ "keys": ["super+ctrl+u","super+ctrl+x"], "command": "sftp_cancel_upload" }
	///////////////////// SFTP keymap end ///////////////////////
]
